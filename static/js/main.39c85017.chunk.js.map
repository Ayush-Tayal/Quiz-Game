{"version":3,"sources":["components/Navbar.js","questions.js","State/Actions/index.js","components/Quiz.js","App.js","reportWebVitals.js","State/Reducers/score.js","State/Reducers/index.js","State/store.js","index.js"],"names":["Navbar","score","useSelector","state","scores","className","href","questions","questionText","answerOptions","answerText","isCorrect","RIGHT_ANSWER","WRONG_ANSWER","Quiz","dispatch","useDispatch","useState","queNo","setQueNo","checkSubmit","setcheckSubmit","handleOptionsClick","isRight","data","console","log","type","payload","wrongAnswer","map","option","i","onClick","alert","window","location","reload","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","scoreReducer","action","allReducers","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39c85017.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nconst Navbar = () => {\r\n    const score = useSelector(state => state.scores);\r\n    // console.log(\"score\", score);\r\n    \r\n    return (\r\n        <>\r\n            <nav className=\"navbar\">\r\n                <div className=\"title\">\r\n                    <a href=\"/\">Quiz-Time</a>\r\n                </div>\r\n\r\n                <div className=\"nav-score\">\r\n                    <button>Your Score: {score}</button>\r\n                </div>\r\n            </nav>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","const questions = [\r\n    {\r\n      questionText: \"What is the capital of France?\",\r\n      answerOptions: [\r\n        { answerText: \"New York\", isCorrect: false },\r\n        { answerText: \"London\", isCorrect: false },\r\n        { answerText: \"Paris\", isCorrect: true },\r\n        { answerText: \"Dublin\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"Who is CEO of Tesla?\",\r\n      answerOptions: [\r\n        { answerText: \"Jeff Bezos\", isCorrect: false },\r\n        { answerText: \"Elon Musk\", isCorrect: true },\r\n        { answerText: \"Bill Gates\", isCorrect: false },\r\n        { answerText: \"Tony Stark\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"The iPhone was created by which company?\",\r\n      answerOptions: [\r\n        { answerText: \"Apple\", isCorrect: true },\r\n        { answerText: \"Intel\", isCorrect: false },\r\n        { answerText: \"Amazon\", isCorrect: false },\r\n        { answerText: \"Microsoft\", isCorrect: false },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"How many Harry Potter books are there?\",\r\n      answerOptions: [\r\n        { answerText: \"1\", isCorrect: false },\r\n        { answerText: \"4\", isCorrect: false },\r\n        { answerText: \"6\", isCorrect: false },\r\n        { answerText: \"7\", isCorrect: true },\r\n      ],\r\n    },\r\n  ];\r\n  \r\n  export default questions;\r\n  ","export const RIGHT_ANSWER = \"RIGHT_ANSWER\";\r\nexport const WRONG_ANSWER = \"WRONG_ANSWER\";\r\n\r\n\r\nexport const rightAnswer = (data)=> {\r\n    return {\r\n        type:RIGHT_ANSWER,\r\n        payload:data\r\n    }\r\n}\r\n\r\n\r\nexport const wrongAnswer = (data)=> {\r\n    return {\r\n        type:WRONG_ANSWER,\r\n        payload:data\r\n    }\r\n}","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport questions from \"../questions\";\r\nimport { rightAnswer, wrongAnswer } from \"../State/Actions\";\r\n\r\nconst Quiz = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [queNo, setQueNo] = useState(0);\r\n\r\n  const score = useSelector((state) => state.scores);\r\n\r\n  const [checkSubmit, setcheckSubmit] = useState(false)\r\n\r\n  const handleNextQue = () => {\r\n    setQueNo(queNo + 1);\r\n    // console.log(\"que number \", queNo)\r\n  };\r\n\r\n  const handleOptionsClick = (isRight) => {\r\n    isRight ? console.log(\"true\") : console.log(\"false\");\r\n    isRight ? dispatch(rightAnswer()) : dispatch(wrongAnswer());\r\n    setQueNo(queNo + 1);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    alert(\"Are you sure want to submit the Quiz\");\r\n    setcheckSubmit(true)\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* {console.log(\"quesions\", questions)}  */}\r\n      {/* {console.log(\"ques statement\", questions[queNo].questionText)} */}\r\n      {/* {console.log(\"Answer options\", questions[queNo].answerOptions[queNo].answerText)} */}\r\n      {/* {console.log(\"option 1\", questions[queNo].answerOptions[queNo].isCorrect)} */}\r\n      {/* {console.log(\"\", questions[queNo].answerOptions)} */}\r\n\r\n      {queNo < 4 && !checkSubmit? (\r\n        <div className=\"main\">\r\n          <div className=\"questions\">\r\n            <h1>{questions[queNo].questionText}</h1>\r\n          </div>\r\n\r\n          <div className=\"options\">\r\n            {questions[queNo].answerOptions.map((option, i) => {\r\n              return (\r\n                <button\r\n                  onClick={() => {\r\n                    handleOptionsClick(option.isCorrect);\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  {option.answerText}\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          <div className=\"buttons\">\r\n            <button className=\"skipQue\" onClick={handleNextQue}>\r\n              Skip Question\r\n            </button>\r\n            <button className=\"submit\" onClick={handleSubmit}>\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"final-div\">\r\n          <h1 className=\"finalScore\">Your Final Score is: {score}</h1>\r\n          <button\r\n            className=\"restart\"\r\n            onClick={() => {\r\n              window.location.reload();\r\n            }}\r\n          >\r\n            Restart Game\r\n          </button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport Quiz from './components/Quiz';\n\nfunction App() {\n  return (\n    <div>\n      <Navbar/>\n      <Quiz/>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { RIGHT_ANSWER, WRONG_ANSWER } from \"../Actions\";\r\n\r\n\r\nconst initialState = 0;\r\n\r\nconst scoreReducer = (state=initialState, action)=>{\r\n    switch(action.type){\r\n        case RIGHT_ANSWER:{\r\n            \r\n            return state + 4;\r\n        }\r\n        \r\n        case WRONG_ANSWER:{\r\n            return state - 0;\r\n        }\r\n\r\n        default:{\r\n            return state;\r\n        }   \r\n    }\r\n}\r\n\r\nexport default scoreReducer","import { combineReducers } from \"redux\";\r\nimport scoreReducer from \"./score\";\r\n\r\nconst allReducers = combineReducers ({\r\n    scores:scoreReducer\r\n})\r\n\r\nexport default allReducers","import { applyMiddleware, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport allReducers from \"./Reducers\";\r\n\r\nexport const store = createStore(allReducers, applyMiddleware(thunk))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './State/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}